{"version":3,"file":"static/js/3846.47599059.chunk.js","mappings":"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","sources":["views/Orders/Table.js","views/Orders/OrderTable.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport {\r\n    Typography,\r\n    Box,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableHead,\r\n    TableRow,\r\n    Button,\r\n    Select,\r\n    MenuItem,\r\n    TablePagination\r\n} from \"@mui/material\";\r\nimport PermMediaIcon from '@mui/icons-material/PermMedia';\r\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst getStatusColor = (status) => {\r\n    switch (status) {\r\n        case 'pending':\r\n            return 'red';\r\n        case 'Processing':\r\n            return 'yellow';\r\n        case 'Packing':\r\n            return 'blue';\r\n        case 'Completed':\r\n            return 'green';\r\n        case 'Refunded':\r\n            return 'orange';\r\n        case 'Cancelled':\r\n            return 'grey';\r\n        default:\r\n            return 'inherit';\r\n    }\r\n};\r\n\r\nconst highlightText = (text, query) => {\r\n    if (!query) return text;\r\n    const parts = text.split(new RegExp(`(${query})`, 'gi'));   \r\n    return parts.map((part, index) =>\r\n        part.toLowerCase() === query.toLowerCase() ? (\r\n            <span key={index} style={{ backgroundColor: 'yellow' }}>{part}</span>\r\n        ) : (\r\n            part\r\n        )\r\n    );\r\n};\r\n\r\nconst TableBanner = ({ searchQuery }) => {\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const navigate = useNavigate();\r\n    const token = localStorage.getItem('token');\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const response = await axios.get(\"https://bepocart.in/admin/Bepocart-Orders/\", {\r\n                    headers: {\r\n                        'Authorization': `${token}`,\r\n                    },\r\n                });\r\n                if (Array.isArray(response.data.data)) {\r\n                    setProducts(response.data.data);\r\n                } else {\r\n                    console.error(\"Invalid data format:\", response.data.data);\r\n                    setError(\"Invalid data format received\");\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Error fetching products:\", error);\r\n                if (error.response && (error.response.status === 401 || error.response.status === 403)) {\r\n                    navigate('/login');\r\n                } else {\r\n                    setError(\"Error fetching orders\");\r\n                }\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchProducts();\r\n    }, [navigate]);\r\n\r\n    const handleStatusChange = async (productId, newStatus) => {\r\n        try {\r\n            await axios.put(`https://bepocart.in/admin/Bepocart-Order-status-update/${productId}/`,\r\n                { status: newStatus },\r\n                {\r\n                    headers: {\r\n                        'Authorization': `${token}`,\r\n                    },\r\n                });\r\n\r\n            setProducts((prevProducts) =>\r\n                prevProducts.map((product) =>\r\n                    product.id === productId ? { ...product, status: newStatus } : product\r\n                )\r\n            );\r\n        } catch (error) {\r\n            console.error(\"Error updating order status:\", error);\r\n        }\r\n    };\r\n\r\n    const filteredProducts = products.filter(product =>\r\n        (product.customerName && product.customerName.toLowerCase().includes(searchQuery.toLowerCase())) ||\r\n        (product.created_at && product.created_at.toLowerCase().includes(searchQuery.toLowerCase()))\r\n    );\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"200px\" }}>\r\n                    <Typography variant=\"body1\">Loading...</Typography>\r\n                </Box>\r\n            ) : error ? (\r\n                <Typography variant=\"body1\" color=\"error\">{error}</Typography>\r\n            ) : (\r\n                <>\r\n                    <Table aria-label=\"simple table\" sx={{ mt: 3, whiteSpace: \"nowrap\" }}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Id</TableCell>\r\n                                <TableCell>ORDER ID</TableCell>\r\n                                <TableCell>TIME</TableCell>\r\n                                <TableCell>CUSTOMER NAME</TableCell>\r\n                                <TableCell>Customer Image</TableCell>\r\n                                <TableCell>DATE</TableCell>\r\n                                <TableCell>Total Amount</TableCell>\r\n                                <TableCell>Status</TableCell>\r\n                                <TableCell>Coupon</TableCell>\r\n                                <TableCell>Payment Method</TableCell>\r\n                                <TableCell>Payment ID</TableCell>\r\n                                <TableCell>Order ID</TableCell>\r\n                                <TableCell>Orders</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {filteredProducts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((product) => (\r\n                                <TableRow key={product.id}>\r\n                                    <TableCell>{product.id}</TableCell>\r\n                                    <TableCell>\r\n                                        <Box sx={{ maxWidth: \"150px\" }}>\r\n                                            <Link to={`/order-bill/${product.order_id}/`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                                                <Typography variant=\"body1\" noWrap>\r\n                                                    {highlightText(product.order_id, searchQuery)}\r\n                                                </Typography>\r\n                                            </Link>\r\n                                        </Box>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell>\r\n                                        <Box sx={{ maxWidth: \"150px\" }}>\r\n                                            \r\n                                                <Typography variant=\"body1\" noWrap>\r\n                                                    {product.created_time}\r\n                                                </Typography>\r\n                                       \r\n                                        </Box>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell>\r\n                                        <Box sx={{ maxWidth: \"150px\" }}>\r\n                                            \r\n                                                <Typography variant=\"body1\" noWrap>\r\n                                                    {highlightText(product.customerName, searchQuery)}\r\n                                                </Typography>\r\n                                        \r\n                                        </Box>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell>\r\n                                        \r\n                                            <img\r\n                                                src={`${product.customerImage}`}\r\n                                                alt={product.customerName}\r\n                                                style={{ maxWidth: \"50px\", maxHeight: \"50px\" }}\r\n                                            />\r\n                                       \r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Box sx={{ maxWidth: \"250px\" }}>\r\n                                            <Typography variant=\"body1\">\r\n                                                {highlightText(product.created_at, searchQuery)}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Box sx={{ maxWidth: \"150px\" }}>\r\n                                            <Typography variant=\"body1\" noWrap>\r\n                                                {product.total_amount}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                        <Select\r\n                                            value={product.status}\r\n                                            onChange={(e) => handleStatusChange(product.id, e.target.value)}\r\n                                            displayEmpty\r\n                                            inputProps={{ 'aria-label': 'Without label' }}\r\n                                            size=\"small\"\r\n                                            sx={{\r\n                                                color: getStatusColor(product.status),\r\n                                                minWidth: '120px', // Example: Set minimum width for consistency\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem value=\"pending\">Pending</MenuItem>\r\n                                            <MenuItem value=\"Processing\">Processing</MenuItem>\r\n                                            <MenuItem value=\"Packing\">Packing</MenuItem>\r\n                                            <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                                            <MenuItem value=\"Refunded\">Refunded</MenuItem>\r\n                                            <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n                                        </Select>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell>\r\n                                        <Box sx={{ maxWidth: \"150px\" }}>\r\n                                            <Typography variant=\"body1\" noWrap\r\n                                                sx={{ color: product.couponName ? 'inherit' : 'red' }}>\r\n                                                <LocalOfferIcon sx={{ mr: 1 }} />\r\n                                                {product.couponName ? product.couponName : \"No coupon \"}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell>\r\n                                        <Box sx={{ maxWidth: \"150px\" }}>\r\n                                            <Typography\r\n                                                variant=\"body1\"\r\n                                                noWrap\r\n                                                sx={{\r\n                                                    color:\r\n                                                        product.payment_method === \"COD\"\r\n                                                            ? \"green\"\r\n                                                            : product.payment_method === \"razorpay\"\r\n                                                                ? \"blue\"\r\n                                                                : \"inherit\",\r\n                                                }}\r\n                                            >\r\n                                                {product.payment_method}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell>\r\n                                        <Box sx={{ maxWidth: \"150px\" }}>\r\n                                            <Typography variant=\"body1\" noWrap>\r\n                                                {product.payment_id}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell>\r\n                                        <Box sx={{ maxWidth: \"150px\" }}>\r\n                                            <Typography variant=\"body1\" noWrap>\r\n                                                {product.razorpay_order_id}\r\n                                            </Typography>\r\n                                        </Box>\r\n                                    </TableCell>\r\n\r\n                                    <TableCell>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            startIcon={<PermMediaIcon />}\r\n                                            sx={{ mt: 1 }}\r\n                                            onClick={() => navigate(`/product-image-form/${product.id}/`)}\r\n                                        >\r\n                                            View\r\n                                        </Button>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[10, 25, 50]}\r\n                        component=\"div\"\r\n                        count={filteredProducts.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onPageChange={handleChangePage}\r\n                        onRowsPerPageChange={handleChangeRowsPerPage}\r\n                    />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nTableBanner.propTypes = {\r\n    searchQuery: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default TableBanner;\r\n","import axios from 'axios';\r\nimport React, { useState } from \"react\";\r\nimport { Card, CardContent, Box, Typography, TextField, Button, Select, MenuItem, InputLabel, FormControl } from \"@mui/material\";\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport TableBanner from \"./Table\";\r\n\r\nconst ProductTable = () => {\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\"); // Add state for status\r\n  const [submittedQuery, setSubmittedQuery] = useState(\"\");\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  // Since type=\"date\" inputs already provide YYYY-MM-DD format, no need to format it\r\n  const handleStartDateChange = (event) => {\r\n    setStartDate(event.target.value); // Directly set the value\r\n  };\r\n\r\n  const handleEndDateChange = (event) => {\r\n    setEndDate(event.target.value); // Directly set the value\r\n  };\r\n\r\n  const handleStatusChange = (event) => {\r\n    setStatus(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const requestBody = {\r\n      searchQuery,\r\n      startDate,\r\n      endDate,\r\n      status, \r\n    };\r\n\r\n    // Log the request body for debugging\r\n    console.log('Request Body:', requestBody);\r\n\r\n    // Send data to the backend API and handle the Excel file download\r\n    axios.post('https://bepocart.in/admin/export-orders/', requestBody, {\r\n      responseType: 'blob' // This ensures the response is treated as binary data\r\n    })\r\n    .then(response => {\r\n      // Create a Blob from the response\r\n      const blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n      // Create a link element\r\n      const link = document.createElement('a');\r\n      // Set the download URL\r\n      link.href = window.URL.createObjectURL(blob);\r\n      link.download = `orders_${startDate}_to_${endDate}.xlsx`;\r\n      // Append the link to the body\r\n      document.body.appendChild(link);\r\n      // Trigger the download\r\n      link.click();\r\n      // Remove the link from the body\r\n      document.body.removeChild(link);\r\n\r\n      // Show success message\r\n      alert('Excel file downloaded successfully.');\r\n    })\r\n    .catch(error => {\r\n      console.error('Error sending data:', error);\r\n      alert('Failed to generate Excel file. Please try again.');\r\n    });\r\n\r\n    setSubmittedQuery(searchQuery);\r\n  };\r\n\r\n  return (\r\n    <Box position=\"relative\">\r\n      <Card variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography variant=\"h3\">Orders Table</Typography>\r\n          <Box my={5} display=\"flex\" alignItems=\"center\" gap={2}>\r\n            <TextField\r\n              label=\"Search\"\r\n              placeholder=\"Search by username / date\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              value={searchQuery}\r\n              onChange={handleSearchChange}\r\n            />\r\n            <TextField\r\n              label=\"Start Date\"\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              value={startDate}\r\n              onChange={handleStartDateChange}\r\n            />\r\n            <TextField\r\n              label=\"End Date\"\r\n              type=\"date\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              value={endDate}\r\n              onChange={handleEndDateChange}\r\n            />\r\n            <FormControl variant=\"outlined\" size=\"small\">\r\n              <InputLabel>Status</InputLabel>\r\n              <Select\r\n                value={status}\r\n                onChange={handleStatusChange}\r\n                label=\"Status\"\r\n              >\r\n                <MenuItem value=\"\">All</MenuItem>\r\n                <MenuItem value=\"pending\">Pending</MenuItem>\r\n                <MenuItem value=\"processing\">Processing</MenuItem>\r\n                <MenuItem value=\"packing\">Packing</MenuItem>\r\n                <MenuItem value=\"completed\">Completed</MenuItem>\r\n                <MenuItem value=\"refunded\">Refunded</MenuItem>\r\n                <MenuItem value=\"cancelled\">Cancelled</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleSubmit}\r\n              startIcon={<SearchIcon />}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              overflowX: \"auto\",\r\n              overflowY: \"auto\",\r\n              whiteSpace: \"nowrap\",\r\n              maxWidth: \"100%\",\r\n              maxHeight: \"800px\",\r\n            }}\r\n          >\r\n            <TableBanner searchQuery={submittedQuery} startDate={startDate} endDate={endDate} status={status} />\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ProductTable;\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["getStatusColor","status","highlightText","text","query","split","RegExp","concat","map","part","index","toLowerCase","_jsx","style","backgroundColor","children","_ref","searchQuery","products","setProducts","useState","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","navigate","useNavigate","token","localStorage","getItem","useEffect","async","response","axios","get","headers","Array","isArray","data","console","fetchProducts","filteredProducts","filter","product","customerName","includes","created_at","_Fragment","Box","sx","display","justifyContent","alignItems","height","Typography","variant","color","_jsxs","Table","mt","whiteSpace","TableHead","TableRow","TableCell","TableBody","slice","id","maxWidth","Link","to","order_id","textDecoration","noWrap","created_time","src","customerImage","alt","maxHeight","total_amount","Select","value","onChange","e","productId","newStatus","put","prevProducts","handleStatusChange","target","displayEmpty","inputProps","size","minWidth","MenuItem","couponName","LocalOfferIcon","mr","payment_method","payment_id","razorpay_order_id","Button","startIcon","PermMediaIcon","onClick","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","ProductTable","setSearchQuery","startDate","setStartDate","endDate","setEndDate","setStatus","submittedQuery","setSubmittedQuery","position","Card","CardContent","my","gap","TextField","label","placeholder","type","InputLabelProps","shrink","FormControl","InputLabel","handleSubmit","requestBody","log","post","responseType","then","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","download","body","appendChild","click","removeChild","alert","catch","SearchIcon","overflowX","overflowY","TableBanner","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined"],"sourceRoot":""}