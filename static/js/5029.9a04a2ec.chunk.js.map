{"version":3,"file":"static/js/5029.9a04a2ec.chunk.js","mappings":"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","sources":["views/dashboards/dashboard1-components/ExTable.js","views/tables/BasicTable.js","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","../node_modules/@mui/material/utils/useSlot.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Chip,\r\n  Avatar,\r\n  TablePagination,\r\n} from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\n// Replace with your actual API endpoint\r\nconst API_URL = \"https://bepocart.in/admin/Bepocart-saled-products/\";\r\n\r\nconst ExTable = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [page, setPage] = useState(0); // For pagination\r\n  const [rowsPerPage, setRowsPerPage] = useState(5); // Rows per page\r\n\r\n  // Fetch data from API\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await axios.get(API_URL, {\r\n        headers: {\r\n          Authorization: `${localStorage.getItem('token')}`, // Ensure token is correct\r\n        },\r\n      });\r\n      const sortedProducts = response.data.total_saled_products.sort(\r\n        (a, b) => b.total_sold - a.total_sold\r\n      ); // Sorting products by total_sold in descending order\r\n      setProducts(sortedProducts || []);\r\n    } catch (error) {\r\n      console.error(\"Error fetching product data:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Handle page change\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  // Handle rows per page change\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  // Get the current products to display based on pagination\r\n  const paginatedProducts = products.slice(\r\n    page * rowsPerPage,\r\n    page * rowsPerPage + rowsPerPage\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        aria-label=\"simple table\"\r\n        sx={{\r\n          mt: 3,\r\n          whiteSpace: \"nowrap\",\r\n        }}\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>\r\n              <Typography color=\"textSecondary\" variant=\"h6\">\r\n                Image\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography color=\"textSecondary\" variant=\"h6\">\r\n                Id\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography color=\"textSecondary\" variant=\"h6\">\r\n                Name\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography color=\"textSecondary\" variant=\"h6\">\r\n                Price\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell>\r\n              <Typography color=\"textSecondary\" variant=\"h6\">\r\n                Total Sold\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n              <Typography color=\"textSecondary\" variant=\"h6\">\r\n                Budget\r\n              </Typography>\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {paginatedProducts.map((product, index) => (\r\n            <TableRow key={product.id}>\r\n              <TableCell>\r\n                <Avatar\r\n                  src={product.image || \"/path/to/placeholder-image.jpg\"}\r\n                  alt={product.name}\r\n                />\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"15px\",\r\n                    fontWeight: \"500\",\r\n                  }}\r\n                >\r\n                  {index + 1 + page * rowsPerPage}\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography\r\n                      variant=\"h6\"\r\n                      sx={{\r\n                        fontWeight: \"600\",\r\n                      }}\r\n                    >\r\n                      {product.name.length > 20 ? `${product.name.slice(0, 20)}...` : product.name}\r\n                    </Typography>\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      sx={{\r\n                        fontSize: \"13px\",\r\n                      }}\r\n                    >\r\n                      {product.salePrice || \"N/A\"}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography color=\"textSecondary\" variant=\"h6\">\r\n                  {product.salePrice || \"N/A\"}\r\n                </Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Chip\r\n                  sx={{\r\n                    pl: \"4px\",\r\n                    pr: \"4px\",\r\n                    backgroundColor: product.pbg || \"grey\",\r\n                    color: \"#fff\",\r\n                  }}\r\n                  size=\"small\"\r\n                  label={product.total_sold || \"Unknown\"}\r\n                />\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                <Typography variant=\"h6\">\r\n                  ${product.total_sold * product.salePrice}\r\n                </Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      {/* Pagination controls */}\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={products.length}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        rowsPerPage={rowsPerPage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        rowsPerPageOptions={[5, 10, 25]} // Options for rows per page\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExTable;\r\n","import React from \"react\";\r\n\r\nimport { Card, CardContent, Box, Typography } from \"@mui/material\";\r\n\r\nimport ExTable from \"../dashboards/dashboard1-components/ExTable\";\r\n\r\nconst BasicTable = () => {\r\n  return (\r\n    <Box>\r\n      <Card variant=\"outlined\">\r\n        <CardContent>\r\n          <Typography variant=\"h3\">Basic Table</Typography>\r\n          <Box\r\n            sx={{\r\n              overflow: {\r\n                xs: \"auto\",\r\n                sm: \"unset\",\r\n              },\r\n            }}\r\n          >\r\n            <ExTable />\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BasicTable;\r\n","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"alt\", \"children\", \"className\", \"component\", \"slots\", \"slotProps\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '../zero-styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Person from '../internal/svg-icons/Person';\nimport { getAvatarUtilityClass } from './avatarClasses';\nimport useSlot from '../utils/useSlot';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: _extends({\n      color: (theme.vars || theme).palette.background.default\n    }, theme.vars ? {\n      backgroundColor: theme.vars.palette.Avatar.defaultBg\n    } : _extends({\n      backgroundColor: theme.palette.grey[400]\n    }, theme.applyStyles('dark', {\n      backgroundColor: theme.palette.grey[600]\n    })))\n  }]\n}));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n      alt,\n      children: childrenProp,\n      className,\n      component = 'div',\n      slots = {},\n      slotProps = {},\n      imgProps,\n      sizes,\n      src,\n      srcSet,\n      variant = 'circular'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: _extends({}, imgProps, slotProps.img)\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, _extends({}, imgSlotProps));\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   * @deprecated Use `slotProps.img` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"elementType\", \"ownerState\", \"externalForwardedProps\", \"getSlotOwnerState\", \"internalForwardedProps\"],\n  _excluded2 = [\"component\", \"slots\", \"slotProps\"],\n  _excluded3 = [\"component\"];\nimport useForkRef from '@mui/utils/useForkRef';\nimport appendOwnerState from '@mui/utils/appendOwnerState';\nimport resolveComponentProps from '@mui/utils/resolveComponentProps';\nimport mergeSlotProps from '@mui/utils/mergeSlotProps';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n      className,\n      elementType: initialElementType,\n      ownerState,\n      externalForwardedProps,\n      getSlotOwnerState,\n      internalForwardedProps\n    } = parameters,\n    useSlotPropsParams = _objectWithoutPropertiesLoose(parameters, _excluded);\n  const {\n      component: rootComponent,\n      slots = {\n        [name]: undefined\n      },\n      slotProps = {\n        [name]: undefined\n      }\n    } = externalForwardedProps,\n    other = _objectWithoutPropertiesLoose(externalForwardedProps, _excluded2);\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  const _mergeSlotProps = mergeSlotProps(_extends({\n      className\n    }, useSlotPropsParams, {\n      externalForwardedProps: name === 'root' ? other : undefined,\n      externalSlotProps: resolvedComponentsProps\n    })),\n    {\n      props: {\n        component: slotComponent\n      },\n      internalRef\n    } = _mergeSlotProps,\n    mergedProps = _objectWithoutPropertiesLoose(_mergeSlotProps.props, _excluded3);\n  const ref = useForkRef(internalRef, resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, parameters.ref);\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  const finalOwnerState = _extends({}, ownerState, slotOwnerState);\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = appendOwnerState(elementType, _extends({}, name === 'root' && !rootComponent && !slots[name] && internalForwardedProps, name !== 'root' && !slots[name] && internalForwardedProps, mergedProps, LeafComponent && {\n    as: LeafComponent\n  }, {\n    ref\n  }), finalOwnerState);\n  Object.keys(slotOwnerState).forEach(propName => {\n    delete props[propName];\n  });\n  return [elementType, props];\n}"],"names":["ExTable","products","setProducts","useState","page","setPage","rowsPerPage","setRowsPerPage","useEffect","async","sortedProducts","axios","get","headers","Authorization","concat","localStorage","getItem","data","total_saled_products","sort","a","b","total_sold","error","console","fetchProducts","paginatedProducts","slice","_jsxs","_Fragment","children","Table","sx","mt","whiteSpace","_jsx","TableHead","TableRow","TableCell","Typography","color","variant","align","TableBody","map","product","index","Avatar","src","image","alt","name","fontSize","fontWeight","Box","display","alignItems","length","salePrice","Chip","pl","pr","backgroundColor","pbg","size","label","id","TablePagination","component","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","target","value","rowsPerPageOptions","BasicTable","Card","CardContent","overflow","xs","sm","createSvgIcon","d","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AvatarRoot","styled","overridesResolver","props","styles","ownerState","root","colorDefault","_ref","theme","position","justifyContent","flexShrink","width","height","fontFamily","typography","pxToRem","lineHeight","borderRadius","userSelect","variants","style","vars","shape","_extends","palette","background","default","defaultBg","grey","applyStyles","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","React","inProps","ref","useDefaultProps","childrenProp","className","slots","slotProps","imgProps","sizes","srcSet","other","_objectWithoutPropertiesLoose","loaded","_ref2","crossOrigin","referrerPolicy","setLoaded","active","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","classes","composeClasses","useUtilityClasses","ImgSlot","imgSlotProps","useSlot","elementType","externalForwardedProps","additionalProps","as","clsx","_excluded2","_excluded3","parameters","initialElementType","getSlotOwnerState","internalForwardedProps","useSlotPropsParams","rootComponent","undefined","resolvedComponentsProps","resolveComponentProps","_mergeSlotProps","mergeSlotProps","externalSlotProps","slotComponent","internalRef","mergedProps","useForkRef","slotOwnerState","finalOwnerState","LeafComponent","appendOwnerState","Object","keys","forEach","propName"],"sourceRoot":""}