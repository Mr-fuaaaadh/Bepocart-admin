{"version":3,"file":"static/js/1152.c9741f47.chunk.js","mappings":"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","sources":["views/Orders/Bill.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Box,\r\n    Typography,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Button,\r\n    Grid,\r\n    Card,\r\n    CardContent\r\n} from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport { useParams } from 'react-router-dom';\r\nimport logo from '../../../src/assets/images/bepocart.png';\r\nimport axios from 'axios';\r\nimport jsPDF from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\n\r\nconst InvoiceHeader = styled(Box)({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: '20px',\r\n});\r\n\r\nconst InvoiceDetails = styled(Box)({\r\n    marginBottom: '20px',\r\n});\r\n\r\nconst InvoiceTable = styled(TableContainer)({\r\n    marginBottom: '20px',\r\n});\r\n\r\nconst InvoiceFooter = styled(Box)({\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: '20px',\r\n});\r\n\r\nconst FullScreenBox = styled(Box)({\r\n    width: '100%',\r\n    height: '100%',\r\n    padding: '20px',\r\n    boxSizing: 'border-box',\r\n});\r\n\r\n\r\nconst Invoice = () => {\r\n    const { order_id } = useParams();\r\n    const [orderData, setOrderData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchOrderData = async () => {\r\n            try {\r\n                const response = await axios.get(`https://bepocart.in/admin/Bepocart-Order-Bill/${order_id}/`);\r\n                setOrderData(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching order data:', error);\r\n            }\r\n        };\r\n\r\n        fetchOrderData();\r\n    }, [order_id]);\r\n\r\n    if (!orderData) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    // Calculate COD charge\r\n    const codCharge = orderData.data.payment_method === 'COD' ? 40.00 : 0.00;\r\n\r\n    // Calculate shipping charge\r\n    const shippingCharge = parseFloat(orderData.data.total_amount) < 500 ? 60.00 : 0.00;\r\n\r\n    // Calculate total amount\r\n    const totalAmount = parseFloat(orderData.data.total_amount);\r\n\r\n    // Function to handle PDF download\r\n    const loadImage = (src) => {\r\n        return new Promise((resolve, reject) => {\r\n            const img = new Image();\r\n            img.crossOrigin = 'anonymous'; // Ensure this matches your CORS policy\r\n            img.onload = () => resolve(img);\r\n            img.onerror = (err) => reject(err);\r\n            img.src = src;\r\n        });\r\n    };\r\n\r\n\r\n    const downloadInvoice = async () => {\r\n        const input = document.getElementById('invoice-container');\r\n        if (!input) {\r\n            console.error('Invoice container not found');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Ensure all images are loaded\r\n            const images = Array.from(input.getElementsByTagName('img'));\r\n            await Promise.all(images.map(img => loadImage(img.src)));\r\n\r\n            // Generate the PDF\r\n            const canvas = await html2canvas(input);\r\n            const imgData = canvas.toDataURL('image/png');\r\n            const pdf = new jsPDF('p', 'mm', 'a4');\r\n            const imgWidth = 210; // Width in mm\r\n            const pageHeight = 295; // Height in mm\r\n            const imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n            let heightLeft = imgHeight;\r\n            let position = 0;\r\n\r\n            pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\r\n            heightLeft -= pageHeight;\r\n\r\n            while (heightLeft >= 0) {\r\n                position = heightLeft - imgHeight;\r\n                pdf.addPage();\r\n                pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);\r\n                heightLeft -= pageHeight;\r\n            }\r\n\r\n            pdf.save(`${orderData.data.order_id}_invoice.pdf`);\r\n        } catch (error) {\r\n            console.error('Error creating PDF:', error.message || error);\r\n        }\r\n    };\r\n\r\n\r\n    const printInvoice = () => {\r\n        const printContent = document.getElementById('invoice-container').innerHTML;\r\n\r\n        const printWindow = window.open('', '', 'height=800,width=800');\r\n        printWindow.document.write('<html><head><title>Invoice</title>');\r\n        printWindow.document.write(`\r\n            <style>\r\n                @media print {\r\n                    body {\r\n                        font-family: Arial, sans-serif;\r\n                        margin: 0;\r\n                        padding: 20px;\r\n                        box-sizing: border-box;\r\n                    }\r\n                    #invoice-container {\r\n                        width: 100%;\r\n                        margin: 0;\r\n                        padding: 0;\r\n                        box-sizing: border-box;\r\n                    }\r\n                    .invoice-header, .invoice-footer {\r\n                        margin: 0;\r\n                        padding: 10px;\r\n                        border-bottom: 1px solid #ddd;\r\n                        display: flex;\r\n                        justify-content: space-between;\r\n                        align-items: center;\r\n                    }\r\n                    .invoice-header {\r\n                        border-bottom: 2px solid #000;\r\n                    }\r\n                    .invoice-footer {\r\n                        border-top: 2px solid #000;\r\n                        text-align: right;\r\n                    }\r\n                    .invoice-table {\r\n                        width: 100%;\r\n                        border-collapse: collapse;\r\n                        margin: 20px 0;\r\n                        text-align: left;\r\n                    }\r\n                    .invoice-table th, .invoice-table td {\r\n                        border: 1px solid #ddd;\r\n                        padding: 8px;\r\n                        text-align: left;\r\n                    }\r\n                    .invoice-table th {\r\n                        background-color: #f4f4f4;\r\n                    }\r\n                    img {\r\n                        max-width: 100px;\r\n                        height: auto;\r\n                        object-fit: cover;\r\n                    }\r\n                    .page-break {\r\n                        page-break-before: always;\r\n                    }\r\n                    button {\r\n                        display: none;\r\n                    }\r\n                }\r\n            </style>\r\n        `);\r\n        printWindow.document.write('</head><body>');\r\n        printWindow.document.write(printContent);\r\n        printWindow.document.write('</body></html>');\r\n\r\n        printWindow.document.close();\r\n        printWindow.focus();\r\n        printWindow.onload = function () {\r\n            printWindow.print();\r\n            printWindow.close();\r\n        };\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <FullScreenBox>\r\n            <div id=\"invoice-container\">\r\n                <Card variant=\"outlined\" style={{ height: '100%' }}>\r\n                    <CardContent style={{ height: '100%' }}>\r\n                        <InvoiceHeader className='invoice-header'>\r\n                            <Box>\r\n                                <Typography variant=\"h4\">INVOICE</Typography>\r\n                                <Typography variant=\"body2\" color=\"primary\">{orderData.data.status}</Typography>\r\n                            </Box>\r\n                            <Box>\r\n                                <img src={logo} alt=\"Company Logo\" style={{ height: '100px' }} />\r\n                            </Box>\r\n                        </InvoiceHeader>\r\n                        <InvoiceDetails>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"h6\">DATE</Typography>\r\n                                    <Typography variant=\"body2\">{orderData.data.created_at}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"h6\">INVOICE NO</Typography>\r\n                                    <Typography variant=\"body2\">{orderData.data.order_id}</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"h6\">INVOICE FROM</Typography>\r\n                                    <Typography variant=\"body2\">\r\n                                        Name: Bepocart\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\">\r\n                                        Address: Willington Island , 256314 , Valav thirinj moonnanmathe building\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\">Email: Bepocart@gmail.com</Typography>\r\n                                    <Typography variant=\"body2\">Phone: 123456789</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <Typography variant=\"h6\">INVOICE TO</Typography>\r\n                                    <Typography variant=\"body2\">\r\n                                        Name: {orderData.data.customerName} {orderData.data.lastName}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\">\r\n                                        Address: {orderData.data.address}, {orderData.data.city}, {orderData.data.state}, {orderData.data.pincode}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\">Email: {orderData.data.email}</Typography>\r\n                                    <Typography variant=\"body2\">Phone: {orderData.data.phone}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </InvoiceDetails>\r\n                        <InvoiceTable component={Paper}>\r\n                            <Table>\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>SR.</TableCell>\r\n                                        <TableCell>PRODUCT IMAGE</TableCell>\r\n                                        <TableCell>PRODUCT TITLE</TableCell>\r\n                                        <TableCell>QUANTITY</TableCell>\r\n                                        <TableCell>ITEM PRICE</TableCell>\r\n                                        <TableCell>AMOUNT</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {orderData.order_items.map(({ productImage, productName, color, size, quantity, price }, index) => (\r\n                                        <TableRow key={index}>\r\n                                            <TableCell>{index + 1}</TableCell>\r\n                                            <TableCell>\r\n                                                <img\r\n                                                    src={productImage}\r\n                                                    alt={`${productName} - ${color} - ${size}`}\r\n                                                    style={{ width: '50px', height: '50px', objectFit: 'cover' }}\r\n                                                />\r\n                                            </TableCell>\r\n                                            <TableCell>{productName} - {color} - {size}</TableCell>\r\n                                            <TableCell>{quantity}</TableCell>\r\n                                            <TableCell>₹{price}</TableCell>\r\n                                            <TableCell>\r\n                                                <Typography color=\"error\" style={{ fontWeight: 'bold' }}>\r\n                                                    ₹{(quantity * parseFloat(price)).toFixed(2)}\r\n                                                </Typography>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n\r\n                            </Table>\r\n                        </InvoiceTable>\r\n                        <InvoiceFooter>\r\n                            <Box>\r\n                                <Typography variant=\"h6\">PAYMENT METHOD</Typography>\r\n                                <Typography variant=\"body2\">{orderData.data.payment_method}</Typography>\r\n                            </Box>\r\n                            <Box>\r\n                                <Typography variant=\"h6\">COD CHARGE</Typography>\r\n                                <Typography variant=\"body2\">₹{codCharge.toFixed(2)}</Typography>\r\n                            </Box>\r\n                            <Box>\r\n                                <Typography variant=\"body2\">SHIPPING COST</Typography>\r\n                                <Typography variant=\"body2\">₹{shippingCharge.toFixed(2)}</Typography>\r\n                            </Box>\r\n                            <Box>\r\n                                <Typography variant=\"h6\">TOTAL AMOUNT</Typography>\r\n                                <Typography variant=\"h6\" color=\"error\" style={{ fontWeight: 'bold' }}>₹{totalAmount.toFixed(2)}</Typography>\r\n                            </Box>\r\n                        </InvoiceFooter>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\r\n                <Button variant=\"contained\" color=\"primary\" onClick={downloadInvoice}>\r\n                    Download Invoice\r\n                </Button>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={printInvoice}>\r\n                    Print Invoice\r\n                </Button>\r\n            </Box>\r\n        </FullScreenBox>\r\n    );\r\n};\r\n\r\nexport default Invoice;\r\n"],"names":["InvoiceHeader","styled","Box","display","justifyContent","alignItems","marginBottom","InvoiceDetails","InvoiceTable","TableContainer","InvoiceFooter","FullScreenBox","width","height","padding","boxSizing","Invoice","order_id","useParams","orderData","setOrderData","useState","useEffect","async","response","axios","get","concat","data","error","console","fetchOrderData","_jsx","children","codCharge","payment_method","shippingCharge","parseFloat","total_amount","totalAmount","_jsxs","id","Card","variant","style","CardContent","className","Typography","color","status","src","logo","alt","Grid","container","spacing","item","xs","created_at","customerName","lastName","address","city","state","pincode","email","phone","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","order_items","map","_ref","index","productImage","productName","size","quantity","price","objectFit","fontWeight","toFixed","sx","mt","Button","onClick","input","document","getElementById","images","Array","from","getElementsByTagName","Promise","all","img","loadImage","resolve","reject","Image","crossOrigin","onload","onerror","err","canvas","html2canvas","imgData","toDataURL","pdf","jsPDF","imgWidth","pageHeight","imgHeight","heightLeft","position","addImage","addPage","save","message","printInvoice","printContent","innerHTML","printWindow","window","open","write","close","focus","print"],"sourceRoot":""}