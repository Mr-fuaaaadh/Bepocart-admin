{"version":3,"file":"static/js/4129.51024141.chunk.js","mappings":"+PAcA,MA8JA,EA9JsBA,KAClB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,CAC/BC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,gBAAiB,MAGdC,EAAMC,IAAWR,EAAAA,EAAAA,WAAS,IAC1BS,EAAUC,IAAeV,EAAAA,EAAAA,UAAS,YAClCW,EAASC,IAAcZ,EAAAA,EAAAA,UAAS,IAEjCa,EAAcA,CAACC,EAAOC,KACT,cAAXA,GAGJP,GAAQ,EAAM,EAGZQ,EAAgBC,IAClBlB,EAAS,IACFD,EACH,CAACmB,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,OAC5B,EA8CN,OACIC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAACjB,KAAMA,EAAMkB,iBAAkB,IAAMC,QAASb,EAAYS,UAC/DC,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CAACD,QAASb,EAAaJ,SAAUA,EAAUmB,GAAI,CAAEC,MAAO,QAASP,SAClEX,OAITU,EAAAA,EAAAA,MAACS,EAAAA,EAAI,CAACC,QAAQ,WAAWH,GAAI,CAAEI,EAAG,GAAIV,SAAA,EAClCC,EAAAA,EAAAA,KAACU,EAAAA,EAAG,CAACL,GAAI,CAAEM,QAAS,aAAeC,QAAQ,OAAOC,WAAW,SAAQd,UACjEC,EAAAA,EAAAA,KAACU,EAAAA,EAAG,CAACI,SAAU,EAAEf,UACbC,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACV,GAAI,CAAEW,SAAU,OAAQC,WAAY,OAAQlB,SAAC,oBAKjEC,EAAAA,EAAAA,KAACkB,EAAAA,EAAO,KACRlB,EAAAA,EAAAA,KAACmB,EAAAA,EAAW,CAACd,GAAI,CAAEM,QAAS,QAASZ,UACjCD,EAAAA,EAAAA,MAAA,QAAMsB,SA7DA1B,IAIlB,GAHAA,EAAE2B,iBAGE9C,EAAMO,WAAaP,EAAMQ,gBAIzB,OAHAI,EAAY,SACZE,EAAW,+BACXJ,GAAQ,GAIZqC,EAAAA,EAAMC,KAAK,sCAAuC,CAC9C7C,SAAUH,EAAMG,SAChBC,MAAOJ,EAAMI,MACb6C,WAAYjD,EAAMK,UAClB6C,UAAWlD,EAAMM,SACjBC,SAAUP,EAAMO,SAChB4C,iBAAkBnD,EAAMQ,kBAE3B4C,MAAKC,IAEFzC,EAAY,WACZE,EAAW,+BACXJ,GAAQ,GAGRT,EAAS,CACLE,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,gBAAiB,IACnB,IAEL8C,OAAMC,IAEH3C,EAAY,SACZE,EAAW,yBACXJ,GAAQ,EAAK,GACf,EAqBuCc,SAAA,EACzBC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACNnC,KAAK,WACLoC,MAAM,WACNxB,QAAQ,WACRyB,WAAS,EACT5B,GAAI,CAAE6B,GAAI,GACVrC,MAAOtB,EAAMG,SACbyD,SAAU1C,KAEdO,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACNnC,KAAK,QACLoC,MAAM,QACNI,KAAK,QACL5B,QAAQ,WACRyB,WAAS,EACT5B,GAAI,CAAE6B,GAAI,GACVrC,MAAOtB,EAAMI,MACbwD,SAAU1C,KAEdO,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACNnC,KAAK,YACLoC,MAAM,aACNxB,QAAQ,WACRyB,WAAS,EACT5B,GAAI,CAAE6B,GAAI,GACVrC,MAAOtB,EAAMK,UACbuD,SAAU1C,KAEdO,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACNnC,KAAK,WACLoC,MAAM,YACNxB,QAAQ,WACRyB,WAAS,EACT5B,GAAI,CAAE6B,GAAI,GACVrC,MAAOtB,EAAMM,SACbsD,SAAU1C,KAEdO,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACNnC,KAAK,WACLoC,MAAM,WACNI,KAAK,WACL5B,QAAQ,WACRyB,WAAS,EACT5B,GAAI,CAAE6B,GAAI,GACVrC,MAAOtB,EAAMO,SACbqD,SAAU1C,KAEdO,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACNnC,KAAK,kBACLoC,MAAM,kBACNI,KAAK,WACL5B,QAAQ,WACRyB,WAAS,EACT5B,GAAI,CAAE6B,GAAI,GACVrC,MAAOtB,EAAMQ,gBACboD,SAAU1C,KAGdO,EAAAA,EAAAA,KAACqC,EAAAA,EAAM,CAACD,KAAK,SAASE,MAAM,UAAU9B,QAAQ,YAAWT,SAAC,qBAMpE,ECxJd,EAVoBwC,KAEhBvC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAE3C,UACzBC,EAAAA,EAAAA,KAACwC,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAG/C,UAChCC,EAAAA,EAAAA,KAAC1B,EAAa,O,0ICRf,SAASyE,EAAoBC,GAClC,OAAOC,EAAAA,EAAAA,IAAqB,UAAWD,EACzC,EACoBE,EAAAA,EAAAA,GAAuB,UAAW,CAAC,S,aCDvD,MAAMC,EAAY,CAAC,YAAa,UAoB1BC,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,EAAO,CAC7B1D,KAAM,UACNoD,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAH9BL,EAId,KACM,CACLM,SAAU,aAwDd,EArD0BC,EAAAA,YAAiB,SAAcC,EAASC,GAChE,MAAMN,GAAQO,EAAAA,EAAAA,GAAgB,CAC5BP,MAAOK,EACPjE,KAAM,aAEF,UACFoE,EAAS,OACTC,GAAS,GACPT,EACJU,GAAQC,EAAAA,EAAAA,GAA8BX,EAAOL,GACzCiB,GAAaC,EAAAA,EAAAA,GAAS,CAAC,EAAGb,EAAO,CACrCS,WAEIK,EA/BkBF,KACxB,MAAM,QACJE,GACEF,EAIJ,OAAOG,EAAAA,EAAAA,GAHO,CACZb,KAAM,CAAC,SAEoBX,EAAqBuB,EAAQ,EAwB1CE,CAAkBJ,GAClC,OAAoBpE,EAAAA,EAAAA,KAAKoD,GAAUiB,EAAAA,EAAAA,GAAS,CAC1CL,WAAWS,EAAAA,EAAAA,GAAKH,EAAQZ,KAAMM,GAC9BU,UAAWT,EAAS,OAAIU,EACxBb,IAAKA,EACLM,WAAYA,GACXF,GACL,G","sources":["views/Admin/AdminForm.js","views/Admin/Form.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    Divider,\r\n    Box,\r\n    Typography,\r\n    TextField,\r\n    Button,\r\n    Snackbar,\r\n    Alert,\r\n} from \"@mui/material\";\r\n\r\nconst FbDefaultForm = () => {\r\n    const [state, setState] = useState({\r\n        username: \"\",\r\n        email: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [severity, setSeverity] = useState(\"success\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // Check if passwords match\r\n        if (state.password !== state.confirmPassword) {\r\n            setSeverity(\"error\");\r\n            setMessage(\"Passwords do not match\");\r\n            setOpen(true);\r\n            return;\r\n        }\r\n\r\n        axios.post('https://bepocart.in/admin/register/', {\r\n            username: state.username,\r\n            email: state.email,\r\n            first_name: state.firstName, // Ensure this matches your backend field\r\n            last_name: state.lastName, // Ensure this matches your backend field\r\n            password: state.password,\r\n            password_confirm: state.confirmPassword, // Include password confirmation\r\n        })\r\n        .then(response => {\r\n            // Handle successful response\r\n            setSeverity(\"success\");\r\n            setMessage(\"Form submitted successfully\");\r\n            setOpen(true);\r\n\r\n            // Clear form fields after submission\r\n            setState({\r\n                username: \"\",\r\n                email: \"\",\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                password: \"\",\r\n                confirmPassword: \"\",\r\n            });\r\n        })\r\n        .catch(error => {\r\n            // Handle error response\r\n            setSeverity(\"error\");\r\n            setMessage(\"Error submitting form\");\r\n            setOpen(true);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={severity} sx={{ width: \"100%\" }}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <Card variant=\"outlined\" sx={{ p: 0 }}>\r\n                <Box sx={{ padding: \"15px 30px\" }} display=\"flex\" alignItems=\"center\">\r\n                    <Box flexGrow={1}>\r\n                        <Typography sx={{ fontSize: \"18px\", fontWeight: \"500\" }}>\r\n                            Admin Form\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n                <Divider />\r\n                <CardContent sx={{ padding: \"30px\" }}>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <TextField\r\n                            name=\"username\"\r\n                            label=\"Username\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            sx={{ mb: 2 }}\r\n                            value={state.username}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            name=\"email\"\r\n                            label=\"Email\"\r\n                            type=\"email\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            sx={{ mb: 2 }}\r\n                            value={state.email}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            name=\"firstName\"\r\n                            label=\"First Name\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            sx={{ mb: 2 }}\r\n                            value={state.firstName}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            name=\"lastName\"\r\n                            label=\"Last Name\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            sx={{ mb: 2 }}\r\n                            value={state.lastName}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            sx={{ mb: 2 }}\r\n                            value={state.password}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <TextField\r\n                            name=\"confirmPassword\"\r\n                            label=\"Retype Password\"\r\n                            type=\"password\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            sx={{ mb: 2 }}\r\n                            value={state.confirmPassword}\r\n                            onChange={handleChange}\r\n                        />\r\n\r\n                        <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                            Submit\r\n                        </Button>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FbDefaultForm;\r\n","import React from \"react\";\r\n\r\nimport { Grid } from \"@mui/material\";\r\n\r\nimport { FbDefaultForm } from \"./index\";\r\n\r\nconst FormLayouts = () => {\r\n  return (\r\n    <Grid container spacing={0}>\r\n      <Grid item lg={12} md={12} xs={12}>\r\n        <FbDefaultForm />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormLayouts;\r\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["FbDefaultForm","state","setState","useState","username","email","firstName","lastName","password","confirmPassword","open","setOpen","severity","setSeverity","message","setMessage","handleClose","event","reason","handleChange","e","target","name","value","_jsxs","children","_jsx","Snackbar","autoHideDuration","onClose","Alert","sx","width","Card","variant","p","Box","padding","display","alignItems","flexGrow","Typography","fontSize","fontWeight","Divider","CardContent","onSubmit","preventDefault","axios","post","first_name","last_name","password_confirm","then","response","catch","error","TextField","label","fullWidth","mb","onChange","type","Button","color","FormLayouts","Grid","container","spacing","item","lg","md","xs","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined"],"sourceRoot":""}